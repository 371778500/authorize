<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/task 
       http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/util 
	   http://www.springframework.org/schema/util/spring-util-2.5.xsd 
	   http://www.springframework.org/schema/data/jpa 
	   http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
	   http://www.springframework.org/schema/tx 
	   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:annotation-config/>
	<context:component-scan base-package="com.yonyou.authorize,com.yonyou.upesn,com.yonyou.exam,com.yonyou.appbase">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<context:property-placeholder
		location="classpath*:db.properties,classpath*:conf.properties" />


	<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" /><!-- 
			连接池的最大数据库连接数。设为0表示无限制。 -->
		<property name="initialSize" value="${jdbc.pool.initialSize}" /><!-- 
			初始化连接数量 -->
		<property name="maxWait" value="${jdbc.pool.maxWait}" /><!-- 最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。单位毫秒 -->
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" /><!-- 最大等待连接中的数量,设 
			0 为没有限制 -->
		<property name="minIdle" value="${jdbc.pool.minIdle}" /><!-- 最小等待连接中的数量,设 
			0 为没有限制 -->
		<property name="logAbandoned" value="${jdbc.pool.logAbandoned}" />  <!-- 连接被泄露时是否打印 -->
		<property name="removeAbandoned" value="${jdbc.pool.removeAbandoned}" /><!--强制自我中断避免dbcp自身bug出现连接过久资源耗尽,是否自动回收超时连接 -->
		<property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}" /><!--自我中断时间秒 -->
		<property name="defaultAutoCommit" value="${jdbc.pool.defaultAutoCommit}" />
	</bean>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.yonyou.authorize.entity,com.yonyou.upesn.entity,com.yonyou.exam.paper,com.yonyou.exam.userscore,com.yonyou.appbase" /><!-- 扫描实体 -->
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>


	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect"
				class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>

	<!-- Spring Data Jpa配置 扫描dao -->
	<jpa:repositories base-package="com.yonyou.authorize.dao,com.yonyou.upesn.dao,com.yonyou.exam,com.yonyou.appbase"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- baseDAO 的注入 -->
	<bean id="crossdbDataSource"
		class="com.yonyou.iuap.persistence.bs.framework.ds.CrossdbDataSource"
		lazy-init="false">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>

	<bean id="crossdbJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="crossdbDataSource"></property>
	</bean>

	<bean id="baseDAO" class="com.yonyou.iuap.persistence.bs.dao.BaseDAO">
		<property name="jdbcTemplate" ref="crossdbJdbcTemplate" />
		<property name="dbMetaHelper" ref="dbMetaInfo" />
	</bean>

	<bean id="dbMetaInfo" class="com.yonyou.iuap.persistence.bs.util.DBMetaHelper">
		<property name="jdbcTemplate" ref="crossdbJdbcTemplate" />
		<!-- 可以指定默认数据库类型 -->
		<!--<property name="dbType" value="#{T(uap.web.persist.jdbc.framework.util.DBConsts).POSTGRESQL}"/> -->
	</bean>


	<!-- 缓存 -->
	<bean id="redisPool" class="com.yonyou.iuap.cache.redis.RedisPoolFactory"
		scope="prototype" factory-method="createJedisPool">
		<constructor-arg value="${redis.url}" />
	</bean>
	<bean id="jedisTemplate" class="org.springside.modules.nosql.redis.JedisTemplate">
		<constructor-arg ref="redisPool"></constructor-arg>
	</bean>
	<bean id="cacheManager" class="com.yonyou.iuap.cache.CacheManager">
		<property name="jedisTemplate" ref="jedisTemplate" />
	</bean>

</beans>